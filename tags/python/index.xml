<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on astropenguin</title><link>https://astropengu.in/tags/python/</link><description>Recent content in Python on astropenguin</description><generator>Hugo -- gohugo.io</generator><language>ja</language><managingEditor>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</managingEditor><webMaster>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</webMaster><lastBuildDate>Tue, 29 Dec 2020 17:48:00 +0900</lastBuildDate><atom:link href="https://astropengu.in/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Pythonのクラスとメタクラスまとめ</title><link>https://astropengu.in/posts/32/</link><pubDate>Tue, 29 Dec 2020 17:48:00 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/32/</guid><description>TL;DR 🎍 Pythonのクラス・メタクラス関連は毎回こんがらかるのでメモ。__new__・__init__・typeの役割を正しく理解するのが重要。 まず、以下では通常のクラス定義として以下を考えることにする</description></item><item><title>Pythonのデータクラスのようにxarrayのデータ構造を定義する</title><link>https://astropengu.in/posts/31/</link><pubDate>Fri, 24 Jul 2020 01:46:17 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/31/</guid><description>TL;DR 🌻 xarrayは多次元配列にメタデータ（軸のラベルなど）がくっついたデータを扱うためのツールとして、NumPyやpandasと同様にデータ解析で使われるPythonパッケージですが、様々なデータをx</description></item><item><title>Python dictionary の KeyError に keys 一覧を表示させる</title><link>https://astropengu.in/posts/30/</link><pubDate>Mon, 20 May 2019 00:21:21 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/30/</guid><description>TL;DR 🎏 Python の小ネタですが、dictionary で存在しない key にアクセスした際に送出される KeyError のメッセージに、存在する keys 一覧を表示させる方法をメモしておきます。 KeysInfoDict 以下のような dictionary のサブクラスを作成することで実現</description></item><item><title>Pandasとセットで理解するxarray：データ構造編</title><link>https://astropengu.in/posts/29/</link><pubDate>Wed, 01 May 2019 16:05:17 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/29/</guid><description>TL;DR 🎏 xarrayはラベル付き多次元配列のセットを扱うためのPythonパッケージで、PyDataによって開発されています。 Pythonにはもともと、多次元配列を効率的に扱うことのできるNumPy、ラベ</description></item><item><title>Matplotlib で図の余白のみを透明にする</title><link>https://astropengu.in/posts/26/</link><pubDate>Mon, 11 Feb 2019 16:00:09 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/26/</guid><description>TL;DR ☃️ Matplotlib でプロット以外の余白部分を透明にした図を保存する際のメモです。 何も考えずに plt.savefig() で transparent=True としてしまうと、以下のようにプロット部分も透明になってしまいます。 transparent=False transparent=True この挙動は、plt.savefig() の docstrings</description></item><item><title>Python のタイムゾーン関連まとめ</title><link>https://astropengu.in/posts/25/</link><pubDate>Sat, 19 Jan 2019 20:50:59 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/25/</guid><description>TL;DR 🎍 タイムゾーンを扱う Python パッケージを開発した際に調べた情報をまとめておきます。 そもそも Python におけるタイムゾーンは、tzinfo と呼ばれるオブジェクトによって表現されます。 これは、標準ライブラリの datetime.tzinfo クラス</description></item><item><title>Python の setup.py の内容を setup.cfg で管理する</title><link>https://astropengu.in/posts/23/</link><pubDate>Mon, 17 Dec 2018 20:43:36 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/23/</guid><description>TL;DR 🎄 これはアドベントカレンダーの17日目の記事です。 今日は、Python のパッケージのインストールで使われる setup.py の内容を、設定ファイル setup.cfg に切り出して管理するための方法をまとめました。 setup.py &amp;amp; setup.cfg setup.py は、Pyth</description></item><item><title>Python で一時的に関数出力を凍結 (キャッシュ) する</title><link>https://astropengu.in/posts/21/</link><pubDate>Sat, 15 Dec 2018 01:32:30 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/21/</guid><description>TL;DR 🎄 これはアドベントカレンダーの15日目の記事です。 今日は、Python の関数出力を一時的に変化させないようにキャッシュするという、わりとマニアックな話のメモです。 Temporary caching of function&amp;rsquo;s return 例えば、ユーザからクエリを</description></item><item><title>IPython/Jupyter の設定も pipenv で管理する</title><link>https://astropengu.in/posts/20/</link><pubDate>Fri, 14 Dec 2018 12:28:08 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/20/</guid><description>TL;DR 🎄 これはアドベントカレンダーの14日目の記事です。 2018年の Python プロジェクトのはじめかた にもあるように、pipenv の登場によって Python でも依存関係 (Python バージョン + パッケージ) を両方管理した環境構築が簡単</description></item><item><title>Python 製ジオコーディングライブラリ Geocoder を試す</title><link>https://astropengu.in/posts/18/</link><pubDate>Wed, 12 Dec 2018 01:51:14 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/18/</guid><description>TL;DR 🎄 これはアドベントカレンダーの12日目の記事です。 今日は、Python 製のジオコーディングライブラリの Geocoder を試してみたという話です。 Why geocoding? 地上望遠鏡の観測の際には、その地点での天体の方位角と仰角 (az, el) が一</description></item><item><title>Python のコンテキストマネージャを使った複数行の時間計測</title><link>https://astropengu.in/posts/10/</link><pubDate>Tue, 04 Dec 2018 21:35:49 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/10/</guid><description>TL;DR 🎄 これはアドベントカレンダーの4日目の記事です。 今日は Python で複数行のコードの実行時間を計測する際の書き方をまとめました。 Context stopwatch 複数行のコードの時間計測では、よく以下のようなコードを見かけます。 import time start = time.time()</description></item><item><title>Matplotlib のデフォルトスタイルの復元方法</title><link>https://astropengu.in/posts/9/</link><pubDate>Mon, 03 Dec 2018 21:47:56 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/9/</guid><description>TL;DR 🎄 これはアドベントカレンダーの3日目の記事です。 今日は雑ですが、matplotlib のデフォルトスタイルを復元する方法のメモです。 import matplotlib.pyplot as plt plt.rcParams.update(plt.rcParamsDefault)</description></item><item><title>Python におけるシングルトンの実装</title><link>https://astropengu.in/posts/8/</link><pubDate>Sun, 02 Dec 2018 00:58:38 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/8/</guid><description>TL;DR 🎄 これはアドベントカレンダーの2日目の記事です。 Pythonにおけるシングルトンの実装を試してみた際のメモです。 Singleton in Python シングルトンはメタクラスとして実装することができます。 仕組みとしては単純で、もし</description></item><item><title>IPython shell で tee を実現する</title><link>https://astropengu.in/posts/7/</link><pubDate>Sat, 01 Dec 2018 23:54:06 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/7/</guid><description>TL;DR 🎄 ウェブサイトへのアウトプットを軌道に乗せるため、アドベントカレンダーをやってみることにします。 というわけでこれはアドベントカレンダー1日目の記事です。 Linux では標準出力をターミナルに表示しつつファイル</description></item><item><title>Radio Astro Tools</title><link>https://astropengu.in/posts/6/</link><pubDate>Sat, 01 Dec 2018 22:44:51 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/6/</guid><description>ALMA Phase 2 submission のために Science Potal を久しぶりに見てみたら、 Tools にこんなものが紹介されていたのでメモ。 http://radio-astro-tools.gitub.io https://github.com/radio-astro-tools 実は 2017年9月に CASA News で紹介されてました。 まだほとんど見れていないけれど、解析ツールとして使えるかぜひ検討して</description></item><item><title>畳み込みによる画像のノイズ除去</title><link>https://astropengu.in/posts/3/</link><pubDate>Sat, 01 Dec 2018 18:40:47 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/3/</guid><description>画像などの2次元配列で、周囲に非ゼロの値が存在しないような孤立したピクセル値をゼロにしたいことがある。 例えば、天体画像を N-sigma clipping した際に、ノイズの影響で天体以外の場所に残ってしまった スパイク状のゴミを消去</description></item></channel></rss>