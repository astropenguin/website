<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IPython on astropenguin</title><link>https://astropengu.in/tags/ipython/</link><description>Recent content in IPython on astropenguin</description><generator>Hugo -- gohugo.io</generator><language>ja</language><managingEditor>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</managingEditor><webMaster>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</webMaster><lastBuildDate>Fri, 14 Dec 2018 12:28:08 +0900</lastBuildDate><atom:link href="https://astropengu.in/tags/ipython/index.xml" rel="self" type="application/rss+xml"/><item><title>IPython/Jupyter の設定も pipenv で管理する</title><link>https://astropengu.in/posts/20/</link><pubDate>Fri, 14 Dec 2018 12:28:08 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/20/</guid><description>TL;DR 🎄 これはアドベントカレンダーの14日目の記事です。 2018年の Python プロジェクトのはじめかた にもあるように、pipenv の登場によって Python でも依存関係 (Python バージョン + パッケージ) を両方管理した環境構築が簡単</description></item><item><title>Python のコンテキストマネージャを使った複数行の時間計測</title><link>https://astropengu.in/posts/10/</link><pubDate>Tue, 04 Dec 2018 21:35:49 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/10/</guid><description>TL;DR 🎄 これはアドベントカレンダーの4日目の記事です。 今日は Python で複数行のコードの実行時間を計測する際の書き方をまとめました。 Context stopwatch 複数行のコードの時間計測では、よく以下のようなコードを見かけます。 import time start = time.time()</description></item><item><title>IPython shell で tee を実現する</title><link>https://astropengu.in/posts/7/</link><pubDate>Sat, 01 Dec 2018 23:54:06 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/7/</guid><description>TL;DR 🎄 ウェブサイトへのアウトプットを軌道に乗せるため、アドベントカレンダーをやってみることにします。 というわけでこれはアドベントカレンダー1日目の記事です。 Linux では標準出力をターミナルに表示しつつファイル</description></item></channel></rss>