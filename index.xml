<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>astropenguin</title><link>https://astropengu.in/</link><description>Recent content on astropenguin</description><generator>Hugo -- gohugo.io</generator><language>ja</language><managingEditor>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</managingEditor><webMaster>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</webMaster><lastBuildDate>Sat, 10 Apr 2021 12:18:00 +0900</lastBuildDate><atom:link href="https://astropengu.in/index.xml" rel="self" type="application/rss+xml"/><item><title>Python 3.7になったGoogle ColabでCASAを動かしてみる</title><link>https://astropengu.in/posts/34/</link><pubDate>Sat, 10 Apr 2021 12:18:00 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/34/</guid><description>&lt;img src="https://astropengu.in/posts/34/cover.jpg" alt="Featured image of post Python 3.7になったGoogle ColabでCASAを動かしてみる" />TL;DR Google Colaboratory（Colab）のPythonのバージョンは長らく3.6でしたが、2021年2月24日に3.7にアップグレードされました1。 これによって、Python 3.6系にしか対応してい</description></item><item><title>ADC/MDASへのLinuxbrewのインストール（2021年版）</title><link>https://astropengu.in/posts/33/</link><pubDate>Wed, 03 Feb 2021 15:28:00 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/33/</guid><description>&lt;img src="https://astropengu.in/posts/33/image.jpg" alt="Featured image of post ADC/MDASへのLinuxbrewのインストール（2021年版）" />TL;DR ☃️ 以前の記事（ADC/MDAS への Linuxbrew のインストール）で、天文データセンター（ADC）の多波長データ解析システム（MDAS）に Linuxbrew をインストールする際の手順をまとめました。 ところが、システムにインスト</description></item><item><title>Pythonのクラスとメタクラスまとめ</title><link>https://astropengu.in/posts/32/</link><pubDate>Tue, 29 Dec 2020 17:48:00 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/32/</guid><description>&lt;img src="https://astropengu.in/posts/32/image.jpg" alt="Featured image of post Pythonのクラスとメタクラスまとめ" />TL;DR 🎍 Pythonのクラス・メタクラス関連は毎回こんがらかるのでメモ。__new__・__init__・typeの役割を正しく理解するのが重要。 まず、以下では通常のクラス定義として以下を考えることにする</description></item><item><title>Pythonのデータクラスのようにxarrayのデータ構造を定義する</title><link>https://astropengu.in/posts/31/</link><pubDate>Fri, 24 Jul 2020 01:46:17 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/31/</guid><description>&lt;img src="https://astropengu.in/posts/31/image.jpg" alt="Featured image of post Pythonのデータクラスのようにxarrayのデータ構造を定義する" />TL;DR 🌻 xarrayは多次元配列にメタデータ（軸のラベルなど）がくっついたデータを扱うためのツールとして、NumPyやpandasと同様にデータ解析で使われるPythonパッケージですが、様々なデータをx</description></item><item><title>Python dictionary の KeyError に keys 一覧を表示させる</title><link>https://astropengu.in/posts/30/</link><pubDate>Mon, 20 May 2019 00:21:21 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/30/</guid><description>&lt;img src="https://astropengu.in/posts/30/image.jpg" alt="Featured image of post Python dictionary の KeyError に keys 一覧を表示させる" />TL;DR 🎏 Python の小ネタですが、dictionary で存在しない key にアクセスした際に送出される KeyError のメッセージに、存在する keys 一覧を表示させる方法をメモしておきます。 KeysInfoDict 以下のような dictionary のサブクラスを作成することで実現</description></item><item><title>Pandasとセットで理解するxarray：データ構造編</title><link>https://astropengu.in/posts/29/</link><pubDate>Wed, 01 May 2019 16:05:17 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/29/</guid><description>&lt;img src="https://astropengu.in/posts/29/image.jpg" alt="Featured image of post Pandasとセットで理解するxarray：データ構造編" />TL;DR 🎏 xarrayはラベル付き多次元配列のセットを扱うためのPythonパッケージで、PyDataによって開発されています。 Pythonにはもともと、多次元配列を効率的に扱うことのできるNumPy、ラベ</description></item><item><title>Hugo theme を変更しました</title><link>https://astropengu.in/posts/28/</link><pubDate>Mon, 15 Apr 2019 11:00:49 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/28/</guid><description>TL;DR 🌸 ウェブサイトの Hugo theme として、しばらくの間 Minimo を使ってきましたが、 新年度を迎えて心機一転？ということでさらにミニマムな Hello Friend に変更しました。 サイドバーなしの one column で、メニューバーの右上からライト・ダークテー</description></item><item><title>GitHub で SSH 公開鍵を公開する</title><link>https://astropengu.in/posts/27/</link><pubDate>Mon, 11 Feb 2019 16:14:36 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/27/</guid><description>TL;DR ☃️ SSHの公開鍵配布を簡単にやる を読んでなるほどなと思ったので、自分の環境でもやってみることにしました。 つまり、GitHub に登録した SSH 公開鍵が URL で公開されていることを利用して、これを各種サーバに</description></item><item><title>Matplotlib で図の余白のみを透明にする</title><link>https://astropengu.in/posts/26/</link><pubDate>Mon, 11 Feb 2019 16:00:09 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/26/</guid><description>TL;DR ☃️ Matplotlib でプロット以外の余白部分を透明にした図を保存する際のメモです。 何も考えずに plt.savefig() で transparent=True としてしまうと、以下のようにプロット部分も透明になってしまいます。 transparent=False transparent=True この挙動は、plt.savefig() の docstrings</description></item><item><title>Python のタイムゾーン関連まとめ</title><link>https://astropengu.in/posts/25/</link><pubDate>Sat, 19 Jan 2019 20:50:59 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/25/</guid><description>TL;DR 🎍 タイムゾーンを扱う Python パッケージを開発した際に調べた情報をまとめておきます。 そもそも Python におけるタイムゾーンは、tzinfo と呼ばれるオブジェクトによって表現されます。 これは、標準ライブラリの datetime.tzinfo クラス</description></item><item><title>Hugo を使ったウェブサイトの作成: Travis CI の設定</title><link>https://astropengu.in/posts/24/</link><pubDate>Tue, 18 Dec 2018 22:44:00 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/24/</guid><description>TL;DR 🎄 これはアドベントカレンダーの18日目の記事です。 だいぶ日が開いてしまいましたが、前回の続き として、Hugo で作成したウェブサイトを Travis CI で自動ビルド→プッシュするための設定を行います。</description></item><item><title>Python の setup.py の内容を setup.cfg で管理する</title><link>https://astropengu.in/posts/23/</link><pubDate>Mon, 17 Dec 2018 20:43:36 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/23/</guid><description>TL;DR 🎄 これはアドベントカレンダーの17日目の記事です。 今日は、Python のパッケージのインストールで使われる setup.py の内容を、設定ファイル setup.cfg に切り出して管理するための方法をまとめました。 setup.py &amp;amp; setup.cfg setup.py は、Pyth</description></item><item><title>Hugo shortcode を使った Instagram 埋め込みテスト</title><link>https://astropengu.in/posts/22/</link><pubDate>Sun, 16 Dec 2018 01:33:19 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/22/</guid><description>TL;DR 🎄 これはアドベントカレンダーの16日目の記事です。 今日は雑ですが、Hugo に標準で実装されている、ショートコードを使ったメディアの埋め込みのメモです。 Embedding an Instagram photo Hugo は {{/* params */}} のフォーマットで、各種ショート</description></item><item><title>Python で一時的に関数出力を凍結 (キャッシュ) する</title><link>https://astropengu.in/posts/21/</link><pubDate>Sat, 15 Dec 2018 01:32:30 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/21/</guid><description>TL;DR 🎄 これはアドベントカレンダーの15日目の記事です。 今日は、Python の関数出力を一時的に変化させないようにキャッシュするという、わりとマニアックな話のメモです。 Temporary caching of function&amp;rsquo;s return 例えば、ユーザからクエリを</description></item><item><title>IPython/Jupyter の設定も pipenv で管理する</title><link>https://astropengu.in/posts/20/</link><pubDate>Fri, 14 Dec 2018 12:28:08 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/20/</guid><description>TL;DR 🎄 これはアドベントカレンダーの14日目の記事です。 2018年の Python プロジェクトのはじめかた にもあるように、pipenv の登場によって Python でも依存関係 (Python バージョン + パッケージ) を両方管理した環境構築が簡単</description></item><item><title>RADEX の自動インストーラを作成する</title><link>https://astropengu.in/posts/19/</link><pubDate>Thu, 13 Dec 2018 02:13:09 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/19/</guid><description>TL;DR 🎄 これはアドベントカレンダーの13日目の記事です。 最近私の周りで non-LTE 放射輸送計算コード RADEX を使う人が増えてきたので、ビルドとインストールを GNU make や Homebrew で行えるようにしたという話です。 Create Makefile RADEX を使うためには、通</description></item><item><title>Python 製ジオコーディングライブラリ Geocoder を試す</title><link>https://astropengu.in/posts/18/</link><pubDate>Wed, 12 Dec 2018 01:51:14 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/18/</guid><description>TL;DR 🎄 これはアドベントカレンダーの12日目の記事です。 今日は、Python 製のジオコーディングライブラリの Geocoder を試してみたという話です。 Why geocoding? 地上望遠鏡の観測の際には、その地点での天体の方位角と仰角 (az, el) が一</description></item><item><title>プログラミング用フォント Ricty のインストール</title><link>https://astropengu.in/posts/17/</link><pubDate>Tue, 11 Dec 2018 23:06:55 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/17/</guid><description>TL;DR 🎄 これはアドベントカレンダーの11日目の記事です。 今日は雑ですが、プログラミング用フォント Ricty のインストールのメモです。 Ricty Ricty (リクティ) は Linux 環境での研究・開発を想定したプログラミング用フォントです。 テ</description></item><item><title>Hugo を使ったウェブサイトの作成: ウェブサイトの設定</title><link>https://astropengu.in/posts/16/</link><pubDate>Mon, 10 Dec 2018 22:50:44 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/16/</guid><description>TL;DR 🎄 これはアドベントカレンダーの10日目の記事です。 今日は昨日の続きで、Hugo で作成したテストサイトの設定をいじっていきます。 Site configuration (config.toml) Hugo のウェブサイトの設定は config.toml というファイルで行います。 ちなみに TOML (Tom&amp;rsquo;s Obvious,</description></item><item><title>Hugo を使ったウェブサイトの作成: テストサイトの表示</title><link>https://astropengu.in/posts/15/</link><pubDate>Sun, 09 Dec 2018 17:40:27 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/15/</guid><description>TL;DR 🎄 これはアドベントカレンダーの9日目の記事です。 今日は昨日の続きで、いよいよ Hugo を使ってウェブサイトを作成していきます。 Install hugo まずは Hugo をローカルにインストールします。 ここでは Homebrew を使ってインストールしまし</description></item><item><title>Hugo を使ったウェブサイトの作成: 技術選定</title><link>https://astropengu.in/posts/14/</link><pubDate>Sat, 08 Dec 2018 22:52:48 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/14/</guid><description>TL;DR 🎄 これはアドベントカレンダーの8日目の記事です。 今日から数回に渡って、このウェブサイト https://astropengu.in の作成方法についてメモしていきます。 まずはウェブサイトの作成に至った経緯と技術選定についてです。 Why personal website? このウェ</description></item><item><title>Slack のカスタムテーマの設定</title><link>https://astropengu.in/posts/13/</link><pubDate>Fri, 07 Dec 2018 09:51:31 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/13/</guid><description>TL;DR 🎄 これはアドベントカレンダーの7日目の記事です。 今日は雑ですが、Slack のサイドバーのカスタムテーマ集のサイトの紹介と設定方法のメモです。 Slack Themes Slack Themes というサイトが便利そうです。 様々なカスタムテーマが</description></item><item><title>ADC/MDAS への tmux のインストール</title><link>https://astropengu.in/posts/12/</link><pubDate>Thu, 06 Dec 2018 12:16:40 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/12/</guid><description>TL;DR 🎄 これはアドベントカレンダーの6日目の記事です。 今日は昨日の続きで、Linuxbrew を利用して ADC/MDAS に tmux をインストールした話です。 Install tmux by Linuxbrew ALMAデータのキャリブレーションやイメージングなどの重い処理</description></item><item><title>ADC/MDAS への Linuxbrew のインストール</title><link>https://astropengu.in/posts/11/</link><pubDate>Wed, 05 Dec 2018 18:18:49 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/11/</guid><description>TL;DR 🎄 これはアドベントカレンダーの5日目の記事です。 今日は天文データセンター (ADC) の多波長データ解析システム (MDAS) に Linuxbrew をインストールする際の手順をまとめました。 Linuxbrew on ADC/MDAS Linuxbrew は macOS で使われているパッケージ管理システム Homebrew</description></item><item><title>Python のコンテキストマネージャを使った複数行の時間計測</title><link>https://astropengu.in/posts/10/</link><pubDate>Tue, 04 Dec 2018 21:35:49 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/10/</guid><description>TL;DR 🎄 これはアドベントカレンダーの4日目の記事です。 今日は Python で複数行のコードの実行時間を計測する際の書き方をまとめました。 Context stopwatch 複数行のコードの時間計測では、よく以下のようなコードを見かけます。 import time start = time.time()</description></item><item><title>Matplotlib のデフォルトスタイルの復元方法</title><link>https://astropengu.in/posts/9/</link><pubDate>Mon, 03 Dec 2018 21:47:56 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/9/</guid><description>TL;DR 🎄 これはアドベントカレンダーの3日目の記事です。 今日は雑ですが、matplotlib のデフォルトスタイルを復元する方法のメモです。 import matplotlib.pyplot as plt plt.rcParams.update(plt.rcParamsDefault)</description></item><item><title>Python におけるシングルトンの実装</title><link>https://astropengu.in/posts/8/</link><pubDate>Sun, 02 Dec 2018 00:58:38 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/8/</guid><description>TL;DR 🎄 これはアドベントカレンダーの2日目の記事です。 Pythonにおけるシングルトンの実装を試してみた際のメモです。 Singleton in Python シングルトンはメタクラスとして実装することができます。 仕組みとしては単純で、もし</description></item><item><title>IPython shell で tee を実現する</title><link>https://astropengu.in/posts/7/</link><pubDate>Sat, 01 Dec 2018 23:54:06 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/7/</guid><description>TL;DR 🎄 ウェブサイトへのアウトプットを軌道に乗せるため、アドベントカレンダーをやってみることにします。 というわけでこれはアドベントカレンダー1日目の記事です。 Linux では標準出力をターミナルに表示しつつファイル</description></item><item><title>Radio Astro Tools</title><link>https://astropengu.in/posts/6/</link><pubDate>Sat, 01 Dec 2018 22:44:51 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/6/</guid><description>ALMA Phase 2 submission のために Science Potal を久しぶりに見てみたら、 Tools にこんなものが紹介されていたのでメモ。 http://radio-astro-tools.gitub.io https://github.com/radio-astro-tools 実は 2017年9月に CASA News で紹介されてました。 まだほとんど見れていないけれど、解析ツールとして使えるかぜひ検討して</description></item><item><title>シンボリックリンクのパス指定</title><link>https://astropengu.in/posts/5/</link><pubDate>Sat, 01 Dec 2018 18:41:48 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/5/</guid><description>シンボリックリンクのパス指定についてメモ。 ln -s で貼るときのリンク元・リンクのパスは、 $ ln -s &amp;lt;リンク元の絶対パス&amp;gt; &amp;lt;リンクのパス&amp;gt; または、 $ ln -s &amp;lt;リンクから見たリンク元の相</description></item><item><title>rsync を使った転送・バックアップ</title><link>https://astropengu.in/posts/4/</link><pubDate>Sat, 01 Dec 2018 18:41:26 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/4/</guid><description>rsync は SSH でのファイル・ディレクトリの転送・バックアップに便利な一方、 オプションが複雑なため間違えるとコピー先のデータを消してしまうこともある。 そこで、転送・バックアップのよく使うオプションについてまとめ</description></item><item><title>畳み込みによる画像のノイズ除去</title><link>https://astropengu.in/posts/3/</link><pubDate>Sat, 01 Dec 2018 18:40:47 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/3/</guid><description>画像などの2次元配列で、周囲に非ゼロの値が存在しないような孤立したピクセル値をゼロにしたいことがある。 例えば、天体画像を N-sigma clipping した際に、ノイズの影響で天体以外の場所に残ってしまった スパイク状のゴミを消去</description></item><item><title>VS Code の日本語入力で制御文字が紛れ込む問題</title><link>https://astropengu.in/posts/2/</link><pubDate>Sat, 01 Dec 2018 18:38:39 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/2/</guid><description>Issue VS Code で日本語入力して GitHub にプッシュしたら、以下のように � で表示される文字が紛れ込んでいた。 これは VS Code で使われている Electron のバグで、制御文字 (backspace) が紛れ込んでしまっているようだ。 Solution まず、制御文字が VS Code のエディタ</description></item><item><title>Hello, world!</title><link>https://astropengu.in/posts/1/</link><pubDate>Sat, 01 Dec 2018 18:08:51 +0900</pubDate><author>taniguchi@a.phys.nagoya-u.ac.jp (Akio Taniguchi)</author><guid>https://astropengu.in/posts/1/</guid><description>以前のウェブサイト (http://www.ioa.s.u-tokyo.ac.jp/~taniguchi/) の移転先として、 こちらの新しいウェブサイト (https://astropengu.in) を Hugo で作成しました。 今後はここに研究や開発の情報をまとめる予定です。 以前のウェブサイトはしばらくの間動いていると思いますが、更新はされま</description></item></channel></rss>